select st.*, 
	ic.industry_lvl_1,
	date(ic.ngay_giao_dich_dt) as ngay_giao_dich_dt,	
-- 	case when extract(year from ic.ngay_giao_dich_dt) <= 2018 then 4 
-- 	else ('2021-01-03' - date(ic.ngay_giao_dich_dt))/365 end 
	('2022-01-03' - date(ic.ngay_giao_dich_dt))/365
	as stock_age 
	from stock_transaction st 
	inner join
	stock_industry_code ic on st.stock_id = ic.stock_id and ic.exchange_type  = 'HOSE'
	where extract(dow from st.transaction_date) in (1,2,3,4,5)
	and extract(year from st.transaction_date) >= 2018;
	
	
	
	
-- create new stock_data_mapping_v1 and insert by select query
create table stock_data_mapping_v1 (
	stock_id character(10),
    open_price numeric(10,2),
    highest_price numeric(10,2),
    lowest_price numeric(10,2),
    close_price numeric(10,2),
    transaction_volume numeric,
    status character(10),
    transaction_date timestamp,
	industry_lvl_1 VARCHAR ,
	ngay_giao_dich_DT timestamp,
	stock_age numeric(10,2)
)
insert into stock_data_mapping_v1 
	select st.*, 
	ic.industry_lvl_1,
	date(ic.ngay_giao_dich_dt) as ngay_giao_dich_dt,	
-- 	case when extract(year from ic.ngay_giao_dich_dt) <= 2018 then 4 
-- 	else ('2021-01-03' - date(ic.ngay_giao_dich_dt))/365 end 
	('2022-01-03' - date(ic.ngay_giao_dich_dt))/365
	as stock_age 
	from stock_transaction st 
	inner join
	stock_industry_code ic on st.stock_id = ic.stock_id and ic.exchange_type  = 'HOSE'
	where extract(dow from st.transaction_date) in (1,2,3,4,5)
	and extract(year from st.transaction_date) >= 2018
;
-- add 2 columns in mapping TABLEalter table stock_data_mapping_v1
alter table stock_data_mapping_v1
add column min_transaction_date timestamp
add column max_transaction_date timestamp;

-- V2:
insert into stock_data_mapping_v1 
	select st.*, 
	ic.industry_lvl_1,
	ic.ngay_giao_dich_dt ngay_giao_dich_dt,	
	DATE_PART('year', age(max(st.transaction_date) over (partition by st.stock_id) , ic.ngay_giao_dich_dt)) + 1 stock_age,
	min(st.transaction_date) over (partition by st.stock_id ) min_trasaction_date,
	max(st.transaction_date) over (partition by st.stock_id) max_trasaction_date
	from stock_transaction st
	inner join
	stock_industry_code ic on st.stock_id = ic.stock_id and ic.exchange_type  = 'HOSE'
	where extract(dow from st.transaction_date) in (1,2,3,4,5)
	and extract(year from st.transaction_date) >= 2018
	
	
	-- check missing VALUES
select t.trans_year trans_year,
t.stock_id stock_id,
t.max_date,
t.min_date,
avg(t.trans_count) trans_count_year,
avg(t.trans_interval) trans_interval_year,
avg(t.trans_count/(case when t.trans_interval = 0 then 1 else t.trans_interval end):: numeric(10,2)) trans_perc
from
(
select extract(year from st.transaction_date) trans_year,
st.stock_id,
max(st.transaction_date) over (partition by st.stock_id,extract(year from st.transaction_date) )::date max_date,
min(st.transaction_date) over (partition by st.stock_id,extract(year from st.transaction_date) )::date min_date, 
count(st.stock_id) over (partition by st.stock_id,extract(year from st.transaction_date) )::integer trans_count,
max(st.transaction_date) over (partition by st.stock_id,extract(year from st.transaction_date) )::date - min(st.transaction_date) over (partition by st.stock_id,extract(year from st.transaction_date))::date trans_interval
from stock_transaction st
where extract(year from st.transaction_date) >= 2018
	) t	
group by 1,2,3,4
order by 1